CREATE TABLE Profile_Info
(
USER_ID VARCHAR2(100),
FIRST_NAME VARCHAR2(100),
LAST_NAME VARCHAR2(100),
YEAR_OF_BIRTH NUMBER(38),
MONTH_OF_BIRTH NUMBER(38),
DAY_OF_BIRTH NUMBER(38),
GENDER VARCHAR2(100),
CURRENT_CITY VARCHAR2(100),
CURRENT_STATE VARCHAR2(100),
HOMETOWN_CITY VARCHAR2(100),
HOMETOWN_STATE VARCHAR2(100),
HOMETOWN_COUNTRY VARCHAR2(100),
PRIMARY KEY(USER_ID)
);

CREATE TABLE EDUCATION
(
INSTITUTION_NAME VARCHAR2(100),
PROGRAM_YEAR NUMBER(38),
PROGRAM_CONCENTRATION CHAR(100),
PROGRAM_DEGREE VARCHAR2(100),
PRIMARY KEY(USER_ID, INSTITUTION_NAME, PROGRAM_YEAR, PROGRAM_CONCENTRATION, PROGRAM_DEGREE),
FOREIGN KEY (USER_ID) REFERENCES Profile_Info
);

CREATE TABLE PUBLIC_ARE_FRIENDS
(
USER1_ID VARCHAR2(100),
USER2_ID VARCHAR2(100),
PRIMARY KEY (USER1_ID, USER2_ID),
FOREIGN KEY (USER1_ID) REFERENCES Profile_Info,
FOREIGN KEY (USER2_ID) REFERENCES Profile_Info
);

CREATE TABLE MESSAGE
(
SENDER_ID VARCHAR2(100),
RECEIVER_ID VARCHAR2(100),
MESSAGE_CONTENT VARCHAR2(2000),
SENT_TIME timestamp(6),
PRIMARY KEY (SENDER_ID, RECEIVER_ID, SEND_TIME),
FOREIGN KEY (SENDER_ID, RECEIVER_ID) REFERENCES Profile_Info
);

CREATE TABLE EVENT
(
EVENT_ID VARCHAR2(100)
EVENT_CREATOR_ID VARCHAR2(100)
EVENT_NAME VARCHAR2(100)
EVENT_TAGLINE VARCHAR2(1000)
EVENT_DESCRIPTION VARCHAR2(4000)
EVENT_HOST VARCHAR2(100)
EVENT_TYPE VARCHAR2(100)
EVENT_SUBTYPE VARCHAR2(100)
EVENT_LOCATION VARCHAR2(200)
EVENT_CITY VARCHAR2(100)
EVENT_STATE VARCHAR2(100)
EVENT_COUNTRY VARCHAR2(100)
EVENT_START_TIME TIMESTAMP(6)
EVENT_END_TIME TIMESTAMP(6),
PRIMARY KEY (EVENT_ID)
);

CREATE TABLE PARTICIPATION
(
PARTICIPANTS VARCHAR2(100),
EVENT_ID VARCHAR2(100),
STATUS VARCHAR2(100),
PRIMARY KEY (PARTICIPANTS, EVENT_ID),
FOREIGN KEY (PARTICIPANTS) REFERENCES Profile_Info,
FOREIGN KEY (EVENT_ID) REFERENCES EVENT
);

CREATE TABLE ALBUM
(
ALBUM_ID VARCHAR2(100),
 OWNER_ID VARCHAR2(100),
 COVER_PHOTO_ID VARCHAR2(100),
 ALBUM_NAME VARCHAR2(100),
 ALBUM_CREATED_TIME TIMESTAMP(6),
 ALBUM_MODIFIED_TIME TIMESTAMP(6),
 ALBUM_LINK VARCHAR2(2000),
 ALBUM_VISIBILITY VARCHAR2(100),
PRIMARY KEY (ALBUM_ID),
FOREIGN KEY (OWNER_ID) REFERENCES Profile_Info
);

CREATE TABLE PHOTOS
(
ALBUM_ID VARCHAR2(100),
PHOTO_ID VARCHAR2(100),
PHOTO_CAPTION VARCHAR2(2000),
PHOTO_CREATED_TIME TIMESTAMP(6),
PHOTO_CREATED_TIME TIMESTAMP(6),
PHOTO_LINK VARCHAR2(2000),
PRIMARY KEY (PHOTO_ID),
FOREIGN KEY (ALBUM_ID) REFERENCES ALBUM
);

CREATE TABLE PHOTO_TAG
(
PHOTO_ID VARCHAR2(100),
TAG_SUBJECT_ID VARCHAR2(100),
TAG_X_COORDINATE NUMBER,
TAG_Y_COORDINATE NUMBER,
PRIMARY KEY (PHOTO_ID, TAG_SUBJECT_ID),
FOREIGN KEY (PHOTO_ID) REFERENCES PHOTO
);

CREATE TABLE COMMENTS
(
COMMENTER_ID VARCHAR2(100),
PHOTO_ID VARCHAR2(100),
COMMENT_TEXT VARCHAR2(2000),
COMMENT_TIME TIMESTAMP(6),
PRIMARY KEY (PHOTO_ID, COMMENTER_ID, COMMENT_TIME),
FOREIGN KEY (PHOTO_ID) REFERENCES PHOTO
);

